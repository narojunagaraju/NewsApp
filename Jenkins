pipeline {
    agent any

    environment {
        SONAR_TOKEN = credentials('sonar-token')
        ANDROID_HOME = 'C:/Users/King/AppData/Local/Android/Sdk'
        WEBHOOK_TOKEN = credentials('webhook-token')
    }

    triggers {
            GenericTrigger(
                genericVariables: [
                    [key: 'action', value: '$.action'],
                    [key: 'pull_request', value: '$.pull_request']
                ],
                causeString: 'Triggered by GitHub pull request',
                token: '${WEBHOOK_TOKEN}',
                printContributedVariables: true,
                printPostContent: true,
                silentResponse: false
            )
        }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/narojunagaraju/NewsApp.git'
            }
        }

        stage('Clean Build and Generate Jacoco Debug Report') {
            steps {
                bat './gradlew clean assembleDebug'
                bat './gradlew clean'
                bat './gradlew JacocoDebugCodeCoverage'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    bat "./gradlew sonarqube -Dsonar.projectKey=NewsApp -Dsonar.projectName='NewsApp' -Dsonar.host.url=http://localhost:9000 -Dsonar.login=%SONAR_TOKEN% -Dsonar.coverage.jacoco.xmlReportPaths=C:/Users/King/NewsApp/app/build/reports/jacoco/JacocoDebugCodeCoverage/JacocoDebugCodeCoverage.xml"
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline succeeded! ${env.SONAR_TOKEN}"
        }
        failure {
            echo "Pipeline failed! ${env.SONAR_TOKEN}"
        }
    }
}
